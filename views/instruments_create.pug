extends layout

block content
  form(method="POST", action="" enctype="multipart/form-data") 
    |
    h1= title
    p Required fields are marked with *
    |
    .input_wrapper 
      |
      label.form-label(for="image") Image
      input#image.form-control(type="file", name="image", accept="image/jpeg")
    .input_wrapper
      label.form-label(for="name") Name*:
      input#name.form-control(
        type="text",
        name="name",
        minlength="3",
        maxlength="25",
        value=instrument === undefined ? "" : instrument.name,
        placeholder="Instrument name",
        required
      )
    .input_wrapper
      label.form-label(for="brand") Brand*:
      input#brand.form-control(
        type="text",
        name="brand",
        minlength="3",
        maxlength="25",
        value=instrument === undefined ? "" : instrument.brand,
        placeholder="Instrument brand",
        required
      )
    .input_wrapper
      label.form-label(for="model") Model:
      input#model.form-control(
        type="text",
        name="model",
        placeholder="Instrument model",
        value=instrument === undefined ? "" : instrument.model
      )
    .input_wrapper
      label.form-label(for="description") Description:
      textarea#description.form-control(name="description", maxlength="300" placeholder="Instrument description")= instrument === undefined ? "" : instrument.description
    .input_wrapper
      label.form-label(for="tuning") Tuning:
      select#tuning.form-select.form-select-sm(name="tuning")
        option(value="") Key
        each letter in ["A", "B", "C", "D", "E", "F", "G"]
          each accidental in ["", "b", "#"]
            option(
              value=letter,
              selected=instrument !== undefined && instrument.tuning === `${letter}${accidental}`
            )= `${letter}${accidental}`
    .input_wrapper
      label.form-label(for="price") Price*:
      .input-group
        span.input-group-text $
        input#price.form-control(
          type="number",
          name="price",
          min="1",
          value=instrument === undefined ? "1" : instrument.price,
          required
        )
    .input_wrapper
      label.form-label(for="stock") Stock*:
      input#stock.form-control(
        type="number",
        name="stock",
        min="0",
        value=instrument === undefined ? "0" : instrument.stock,
        required
      )
    .input_wrapper
      fieldset 
        |
        |
        legend Categories*:
        .categories_form
          each category in categories
            .category_form
              input.form-check-input(
                type="checkbox",
                id=`${category.name}-category`,
                name=`${category.name}-category`,
                value=`${category.name}-category`,
                xw,
                checked=instrument !== undefined && instrument.categories !== undefined && instrument.categories.some((instrumentCategory) => instrumentCategory.name === category.name)
              )
              label.form-check-label(for=`${category.name}-category`)= category.name
    button(type="submit")= title

    if errors
      ul
        each error in errors
          li!= error.msg
